{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Image Optimize plugin for Craft CMS 3.x
 *
 * Image Optimize Settings.twig
 *
 * @author    nystudio107
 * @copyright Copyright (c) 2017 nystudio107
 * @link      https://nystudio107.com
 * @package   ImageOptimize
 * @since     1.2.0
 */
#}

{% from 'image-optimize/_includes/macros' import configWarning %}

{% import "_includes/forms" as forms %}

{% do view.registerAssetBundle("nystudio107\\imageoptimize\\assetbundles\\imageoptimize\\ImageOptimizeAsset") %}

<div class="readable">

    <!-- transformMethod -->
    {{ forms.selectField({
        label: "Transform Method"|t('image-optimize'),
        instructions: "Choose from Craft native transforms or an image transform service to handle your image transforms site-wide."|t('image-optimize'),
        id: 'transformMethod',
        name: 'transformMethod',
        value: settings.transformMethod,
        options: {
            'craft': 'Craft'|t('image-optimize'),
            'imgix': "Imgix"|t('image-optimize'),
            'thumbor': "Thumbor"|t('image-optimize'),
        },
        class: 'io-transform-method',
        warning: configWarning('transformMethod', 'image-optimize'),
    }) }}

    <div class="io-method-settings io-imgix-method"{% if settings.transformMethod != 'imgix' %} style="display: none;"{% endif %}>
        <!-- imgixDomain -->
        {{ forms.textField({
            label: 'Imgix Source Domain',
            instructions: "The source domain to use for the Imgix transforms."|t('image-optimize'),
            id: 'imgixDomain',
            name: 'imgixDomain',
            value: settings.imgixDomain,
            warning: configWarning('imgixDomain', 'image-optimize'),
        }) }}
        <!-- imgixApiKey -->
        {{ forms.textField({
            label: 'Imgix API Key',
            instructions: "The API key to use for the Imgix transforms (needed for auto-purging changed assets)."|t('image-optimize'),
            id: 'imgixApiKey',
            name: 'imgixApiKey',
            value: settings.imgixApiKey,
            warning: configWarning('imgixApiKey', 'image-optimize'),
        }) }}
        <!-- imgixSecurityToken -->
        {{ forms.textField({
            label: 'Imgix Security Token',
            instructions: "The optional [security token](https://docs.imgix.com/setup/securing-images) used to sign image URLs from Imgix."|t('image-optimize'),
            id: 'imgixSecurityToken',
            name: 'imgixSecurityToken',
            value: settings.imgixSecurityToken,
            warning: configWarning('imgixSecurityToken', 'image-optimize'),
        }) }}
    </div>
    <div class="io-method-settings io-thumbor-method"{% if settings.transformMethod != 'thumbor' %} style="display: none;"{% endif %}>
        <!-- thumborBaseUrl -->
        {{ forms.textField({
            label: 'Thumbor Base URL',
            instructions: "The base URL to use for the Thumbor transforms."|t('image-optimize'),
            id: 'thumborBaseUrl',
            name: 'thumborBaseUrl',
            value: settings.thumborBaseUrl,
            warning: configWarning('thumborBaseUrl', 'image-optimize'),
        }) }}
        <!-- thumborSecurityKey -->
        {{ forms.textField({
            label: 'Thumbor Security Key',
            instructions: "The optional [security key](https://thumbor.readthedocs.io/en/latest/security.html) used by Thumbor to create secure image urls."|t('image-optimize'),
            id: 'thumborSecurityKey',
            name: 'thumborSecurityKey',
            value: settings.thumborSecurityKey,
            warning: configWarning('thumborSecurityKey', 'image-optimize'),
        }) }}
        <!-- thumborIncludeBucketPrefix -->
        {% if awsS3Installed %}
          {{ forms.lightswitchField({
              label: 'Include Bucket Prefix',
              instructions: 'Optionally prefix your asset path with the bucket name. This is useful if your Thumbor configuration does not specify an explicit bucket. Only relevant for AWS S3 volumes at this time.'|t('image-optimize'),
              id: 'thumborIncludeBucketPrefix',
              name: 'thumborIncludeBucketPrefix',
              on: settings.thumborIncludeBucketPrefix,
              warning: configWarning('thumborIncludeBucketPrefix', 'image-optimize'),
          }) }}
        {% endif %}
    </div>
    <div class="field io-method-settings io-craft-method"{% if settings.transformMethod != 'craft' %} style="display: none;"{% endif %}>
        <div class="heading">
            <h2>{{ 'Image Processors & Variant Creators' }}</h2>
            <div class="instructions">
                <p class="readable">
                    The following ImageOptimize settings are not editable here; this is just an informational display.
                    Instead copy the <code>imageoptimize/config.php</code> file to Craft's <code>config/</code> directory, renaming it to <code>image-optimize.php</code>, and make your changes there to override default settings.
                </p>
            </div>
        </div>
        {% if imageProcessors is defined and imageProcessors |length %}
            <h3>{{ 'Active Image Processors' }}</h3>
            <table id="imageProcessors" class="data collapsible image-optimize">
                <thead class="">
                <tr>
                    <th class="col io-format-column" scope="col">{{ "File Format"|t('image-optimize') }}</th>
                    <th class="col io-name-column" scope="col">{{ "Image Processor"|t('image-optimize') }}</th>
                    <th class="col io-command-column">{{ "Command"|t('image-optimize') }}</th>
                    <th class="thin io-installed-column">{{ "Installed"|t('image-optimize') }}</th>
                </tr>
                </thead>
                <tbody>
                {% for imageProcessor in imageProcessors %}
                    <tr data-id="{{ loop.index0 }}" data-name="{{ imageProcessor.format }}">
                        <td data-title="{{ "File Format"|t('image-optimize') }}">
                            {{ imageProcessor.format }}
                        </td>
                        <td data-title="{{ "Image Processor"|t('image-optimize') }}">
                            {{ imageProcessor.creator }}
                        </td>
                        <td data-title="{{ "Command"|t('image-optimize') }}">
                            <code>{{ imageProcessor.command }}</code>
                        </td>
                        <td class="thin">
                            {%  if imageProcessor.installed %}
                                <span class="success" title="{{ 'Installed'|t('image-optimize') }}" data-icon="check"></span>
                            {% else %}
                                <span class="warning" title="{{ 'Not Installed'|t('image-optimize') }}" data-icon="alert"></span>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            <div class="heading">
                <div class="instructions">
                    <p class="">
                        Image Processors optimize Craft's Image Transforms by losslessly removing metadata and cruft from the images.
                    </p>
                </div>
            </div>
        {% endif %}

        {% if variantCreators is defined and variantCreators |length %}
            <h3>{{ 'Active Image Variant Creators' }}</h3>
            <table id="variantCreators" class="data collapsible image-optimize">
                <thead class="">
                <tr>
                    <th class="col io-format-column" scope="col">{{ "File Format"|t('image-optimize') }}</th>
                    <th class="col io-name-column" scope="col">{{ "Variant Creator"|t('image-optimize') }}</th>
                    <th class="col io-command-column">{{ "Command"|t('image-optimize') }}</th>
                    <th class="thin io-installed-column">{{ "Installed"|t('image-optimize') }}</th>
                </thead>
                </tr>
                <tbody>
                {% for variantCreator in variantCreators %}
                    <tr data-id="{{ loop.index0 }}" data-name="{{ variantCreator.format }}">
                        <td data-title="{{ "File Format"|t('image-optimize') }}">
                            {{ variantCreator.format }}
                        </td>
                        <td data-title="{{ "Variant Creator"|t('image-optimize') }}">
                            {{ variantCreator.creator }}
                        </td>
                        <td data-title="{{ "Command"|t('image-optimize') }}">
                            <code>{{ variantCreator.command }}</code>
                        </td>
                        <td class="thin">
                            {%  if variantCreator.installed %}
                                <span class="success" title="{{ 'Installed'|t('image-optimize') }}" data-icon="check"></span>
                            {% else %}
                                <span class="warning" title="{{ 'Not Installed'|t('image-optimize') }}" data-icon="alert"></span>
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            <div class="heading">
                <div class="instructions">
                    <p class="">
                        Image Variant Creators make new image variants from Craft's Image Transforms.
                    </p>
                </div>
            </div>
        {% endif %}
    </div>
    <div class="field">
        <div class="heading">
            <h2>OptimizedImages Field Settings</h2>
            <div class="instructions">
                <p>ImageOptimize also comes with an <strong>OptimizedImages</strong> Field that you can add to an Asset Volume's layout. The OptimizedImages Field makes creating responsive image sizes for <code>{{ '<img srcset="">' |escape }}</code> or <code>{{ '<picture>' |escape }}</code> elements sublimely easy.</p><p>These responsive image transforms are created when an asset is <em>saved</em>, rather than at page load time, to ensure that frontend performance is optimal.</p>
            </div>
        </div>
    </div>
    <!-- createColorPalette -->
    {{ forms.lightswitchField({
        label: "Create Color Palette"|t('image-optimize'),
        instructions: "Controls whether a dominant color palette should be created for image variants. It takes a bit of time, so if you never plan to use it, you can turn it off."|t('image-optimize'),
        'id': 'createColorPalette',
        'name': 'createColorPalette',
        'on': settings.createColorPalette,
        'warning': configWarning('createColorPalette', 'image-optimize')
    }) }}
    <!-- createPlaceholderSilhouettes -->
    {% if not gdInstalled %}
        <div class="field">
            <p class="warning">You do not have the <code>GD</code> PHP extension installed, so placeholder silhouettes cannot be generated. An SVG box will be used instead.</p>
        </div>
    {% endif %}
    {{ forms.lightswitchField({
        label: "Create Placeholder Silhouettes"|t('image-optimize'),
        instructions: "Controls whether SVG placeholder silhouettes should be created for image variants. It takes a bit of time, so if you never plan to use them, you can turn it off."|t('image-optimize'),
        'id': 'createPlaceholderSilhouettes',
        'name': 'createPlaceholderSilhouettes',
        'on': settings.createPlaceholderSilhouettes,
        'warning': configWarning('createPlaceholderSilhouettes', 'image-optimize')
    }) }}
    <!-- lowerQualityRetinaImageVariants -->
    {{ forms.lightswitchField({
        label: "Lower Quality Retina Image Variants"|t('image-optimize'),
        instructions: "Controls whether retina images are automatically created with reduced quality as per <a href='https://www.netvlies.nl/tips-updates/design-interactie/design-interactie/retina-revolution/' target='_blank'>here</a>."|t('image-optimize') |raw,
        'id': 'lowerQualityRetinaImageVariants',
        'name': 'lowerQualityRetinaImageVariants',
        'on': settings.lowerQualityRetinaImageVariants,
        'warning': configWarning('lowerQualityRetinaImageVariants', 'image-optimize')
    }) }}
    <!-- allowUpScaledImageVariants -->
    {{ forms.lightswitchField({
        label: "Allow Up-Scaled Image Variants"|t('image-optimize'),
        instructions: "Controls whether Optimized Image Variants are created that would be up-scaled to be larger than the original source image."|t('image-optimize'),
        'id': 'allowUpScaledImageVariants',
        'name': 'allowUpScaledImageVariants',
        'on': settings.allowUpScaledImageVariants,
        'warning': configWarning('allowUpScaledImageVariants', 'image-optimize')
    }) }}
    <!-- autoSharpenScaledImages -->
    {{ forms.lightswitchField({
        label: "Auto Sharpen Scaled Images"|t('image-optimize'),
        instructions: "Controls whether images scaled down >= 50% should be automatically sharpened."|t('image-optimize'),
        'id': 'autoSharpenScaledImages',
        'name': 'autoSharpenScaledImages',
        'on': settings.autoSharpenScaledImages,
        'warning': configWarning('autoSharpenScaledImages', 'image-optimize')
    }) }}

</div>

{% js %}
new Craft.AdminTable({
    tableSelector: '#imageProcessors',
});
new Craft.AdminTable({
    tableSelector: '#variantCreators',
});
$('.io-transform-method').change(function(ev) {
    $('.io-method-settings').hide();
    var value = 'io-' + $(ev.target).val() + '-method';
    $('.' + value).slideToggle();
});
{% endjs %}
